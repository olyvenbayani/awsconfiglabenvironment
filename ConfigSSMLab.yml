AWSTemplateFormatVersion: "2010-09-09"
Description:
 This is a CloudFormation that sets up Lab Components for AWS Config.

Parameters:
  TopicEmail:
    Default: your.address@here.com
    Description: E-Mail address to subscribe to alerts.
    Type: String
  BucketName:
    Description: S3 bucket name used for CloudTrail.
    Type: String
  Environment:
    Default: dev
    Description: Environment name (e.g., dev, test, prod).
    Type: String

Resources:
  AWSConfigSNS:
    Type: "AWS::SNS::Topic"
    Properties:
      DisplayName: "ConfigRulesSNS"
      TopicName: !Sub "ConfigRuleNotify-${Environment}"
      Subscription:
        - Endpoint: !Ref TopicEmail
          Protocol: "email"

  SSMConfigEC2LabRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM

  SSMConfigEC2LabProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref 'SSMConfigEC2LabRole'
      Path: /

  EnforceCloudTralRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSCloudTrail_FullAccess
        - arn:aws:iam::aws:policy/AmazonSNSFullAccess
      Path: "/"

  EnforceCloudTrailFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Ensure CloudTrail is set to standard.
      Handler: index.lambda_handler
      Runtime: python3.8
      Role: !GetAtt EnforceCloudTralRole.Arn
      Timeout: 900
      Environment:
        Variables:
          s3_bucket: !Ref BucketName
          trail_name: management-tools-week
          topic_arn: !Ref AWSConfigSNS
      Code:
        ZipFile: !Sub |
          import boto3
          import os

          def lambda_handler(event, context):
              accountid = event['account']
              s3_bucket = os.environ['s3_bucket']
              trail_name = os.environ['trail_name']

              # Creating the CloudTrail client
              cloudtrail_client = boto3.client('cloudtrail')
              sns_client = boto3.client('sns')

              def update_cloudwatch():
                  print(f"arn:aws:iam::{accountid}:role/service-role/management-tools-week")
                  print(f"arn:aws:logs:{os.environ['AWS_REGION']}:{accountid}:log-group:management-tools-week:*")
                  cloudtrail_client.update_trail(
                      Name=trail_name,
                      CloudWatchLogsLogGroupArn=f"arn:aws:logs:{os.environ['AWS_REGION']}:{accountid}:log-group:management-tools-week:*",
                      CloudWatchLogsRoleArn=f"arn:aws:iam::{accountid}:role/service-role/management-tools-week"
                  )
                  sns_client.publish(
                    TopicArn=os.getenv('topic_arn'),
                    Message='CloudWatch Log Group not configured, updated trail with CloudWatch standard',
                    Subject='CloudWatch Group on CloudTrail Misconfigured'
                  )

              # Describing the trail
              trail = cloudtrail_client.describe_trails(
                  trailNameList=[trail_name]
              )

              if trail and trail.get('trailList', []):
                  trail_desc = trail['trailList'][0]

                  if trail_desc['S3BucketName'] != s3_bucket:
                      cloudtrail_client.update_trail(
                          Name=trail_name,
                          S3BucketName=s3_bucket
                      )
                      sns_client.publish(
                        TopicArn=os.getenv('topic_arn'),
                        Message='Bucket name was wrong, corrected bucket name on trail to standard',
                        Subject='S3 Bucket on CloudTrail Misconfigured'
                      )
                  elif 'CloudWatchLogsLogGroupArn' not in trail_desc:
                      update_cloudwatch()
                  elif trail_desc['CloudWatchLogsLogGroupArn'] != f"arn:aws:logs:{os.environ['AWS_REGION']}:{accountid}:log-group:management-tools-week:*":
                      update_cloudwatch()
                  else:
                      print('All good')
              else:
                  cloudtrail_client.create_trail(
                      Name=trail_name,
                      S3BucketName=s3_bucket,
                      IsMultiRegionTrail=True,
                      EnableLogFileValidation=True,
                      CloudWatchLogsLogGroupArn=f"arn:aws:logs:{os.environ['AWS_REGION']}:{accountid}:log-group:management-tools-week:*",
                      CloudWatchLogsRoleArn=f"arn:aws:iam::{accountid}:role/CloudTrail_CloudWatchLogs_Role"
                  )
                  sns_client.publish(
                      TopicArn=os.getenv('topic_arn'),
                      Message='No CloudTrail, created a new trail to standard',
                      Subject='CloudTrail Did Not Exist'
                  )

Outputs:
  EC2SSMRoleName:
    Value: !Ref SSMConfigEC2LabRole
